!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).RevealFragmentOrder=e()}(this,(function(){"use strict";function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function e(e,r){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(e))||r&&e&&"number"==typeof e.length){n&&(e=n);var a=0,o=function(){};return{s:o,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,f=!0,u=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var t=n.next();return f=t.done,t},e:function(t){u=!0,i=t},f:function(){try{f||null==n.return||n.return()}finally{if(u)throw i}}}}return function(){function t(r,n,a){if(n.hasAttribute("data-fragment-id")){var o,i=n.getAttribute("data-fragment-id"),f=r.querySelectorAll('[data-fragment-with="'+i+'"]'),u=e(f);try{for(u.s();!(o=u.n()).done;){var l=o.value;return l.setAttribute("data-fragment-index",a-1),t(r,l,a)}}catch(t){u.e(t)}finally{u.f()}var d=r.querySelector('[data-fragment-after="'+i+'"]');if(d)return d.setAttribute("data-fragment-index",a++),t(r,d,a);f||(console.log("current fragment:"),console.log(n),console.log('neither after nor with fragment is defined, why you define id="'+i+'"'))}return a}return{id:"fragment-order",init:function(r){var n,a=e(document.querySelectorAll("section[data-fragment-order]"));try{for(a.s();!(n=a.n()).done;){var o,i=n.value,f=0,u=e(i.querySelectorAll(".fragment:not([data-fragment-after],[data-fragment-with])"));try{for(u.s();!(o=u.n()).done;){var l=o.value;l.setAttribute("data-fragment-index",f++),f=t(i,l,f)}}catch(t){u.e(t)}finally{u.f()}}}catch(t){a.e(t)}finally{a.f()}}}}}));
